import 'package:bike_project/screens/home.dart';
import 'package:flutter/material.dart';
import 'package:image_picker/image_picker.dart';
import 'dart:io';
import 'dart:typed_data';

class EditProfileModel {
  FFUploadedFile? uploadedLocalFile1;
  bool isDataUploading1 = false;

  void dispose() {}
}

class FFUploadedFile {
  final String name;
  final Uint8List? bytes;
  final double? height;
  final double? width;
  final String? blurHash;

  FFUploadedFile({
    required this.name,
    required this.bytes,
    this.height,
    this.width,
    this.blurHash,
  });
}

class EditProfilePage extends StatefulWidget {
  const EditProfilePage({super.key});

  @override
  _EditProfilePageState createState() => _EditProfilePageState();
}

class _EditProfilePageState extends State<EditProfilePage> {
  late EditProfileModel _model;
  final GlobalKey<ScaffoldState> scaffoldKey = GlobalKey<ScaffoldState>();
  XFile? _aadharCardImage;
  XFile? _panCardImage;
  XFile? _drivingLicenceImage;

  @override
  void initState() {
    super.initState();
    _model = EditProfileModel();
  }

  @override
  void dispose() {
    _model.dispose();
    super.dispose();
  }

  Future<void> _pickImage(ImageSource source, String document) async {
    XFile? pickedImage = await ImagePicker().pickImage(source: source);
    setState(() {
      if (document == 'aadhar') {
        _aadharCardImage = pickedImage;
      } else if (document == 'pan') {
        _panCardImage = pickedImage;
      } else if (document == 'driving') {
        _drivingLicenceImage = pickedImage;
      }
    });
  }

  @override
  Widget build(BuildContext context) {
    final size = MediaQuery.of(context).size;
    final double topPadding = size.height * 0.1;
    final double sidePadding = size.width * 0.05;

    return Scaffold(
      key: scaffoldKey,
      body: Stack(
        children: [
          Align(
            alignment: AlignmentDirectional(-2, -1.03),
            child: ClipRRect(
              borderRadius: BorderRadius.circular(8),
              child: Image.asset(
                'assets/images/Group.png',
                width: size.width * 0.8,
                height: size.height * 0.3,
                fit: BoxFit.contain,
              ),
            ),
          ),
          const Align(
            alignment: AlignmentDirectional(-0.5, -0.83),
            child: Text(
              'Edit Profile',
              style: TextStyle(
                fontSize: 18,
                color: Colors.white,
                fontWeight: FontWeight.w600,
                fontFamily: 'Montserrat',
              ),
            ),
          ),
          Align(
            alignment: const AlignmentDirectional(-0.8, -0.85),
            child: IconButton(
              icon: const Icon(
                Icons.arrow_back_ios,
                color: Colors.white,
                size: 24,
              ),
              onPressed: () {
                Navigator.of(context).pop();
              },
            ),
          ),
          CustomScrollView(
            slivers: <Widget>[
              SliverPadding(
                padding: const EdgeInsets.all(20.0),
                sliver: SliverList(
                  delegate: SliverChildListDelegate(
                    [
                      Padding(
                        padding: EdgeInsets.fromLTRB(
                            sidePadding, topPadding + 150, sidePadding, 10),
                        child: TextField(
                          keyboardType: TextInputType.name,
                          decoration: const InputDecoration(
                            labelText: 'Name',
                            border: OutlineInputBorder(),
                          ),
                          onChanged: (value) {},
                        ),
                      ),
                      Padding(
                        padding: EdgeInsets.fromLTRB(
                            sidePadding, topPadding - 60, sidePadding, 10),
                        child: TextField(
                          keyboardType: TextInputType.emailAddress,
                          decoration: const InputDecoration(
                            labelText: 'Email',
                            border: OutlineInputBorder(),
                          ),
                          onChanged: (value) {},
                        ),
                      ),
                      Padding(
                        padding: EdgeInsets.fromLTRB(
                            sidePadding, topPadding - 60, sidePadding, 10),
                        child: TextField(
                          keyboardType: TextInputType.phone,
                          decoration: const InputDecoration(
                            labelText: 'Mobile Number',
                            border: OutlineInputBorder(),
                          ),
                          onChanged: (value) {},
                        ),
                      ),
                      Padding(
                        padding: EdgeInsets.fromLTRB(
                            sidePadding, topPadding - 60, sidePadding, 10),
                        child: const Align(
                          alignment: AlignmentDirectional(0, 0.49),
                          child: Divider(
                            height: 0,
                            thickness: 2,
                            indent: 50,
                            color: Colors.black,
                            endIndent: 50,
                          ),
                        ),
                      ),
                      Padding(
                        padding: EdgeInsets.fromLTRB(
                            sidePadding - 15, topPadding - 60, sidePadding, 10),
                        child: const Text(
                          'Manage Document',
                          style: TextStyle(
                            fontFamily: 'Montserrat',
                            color: Colors.black,
                            fontSize: 19,
                            fontWeight: FontWeight.w500,
                          ),
                        ),
                      ),
                      Padding(
                        padding: EdgeInsets.fromLTRB(
                            sidePadding, topPadding - 60, sidePadding, 10),
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            const Text(
                              'Aadhar Card',
                              style: TextStyle(
                                fontFamily: 'Poppins',
                                fontSize: 18,
                                fontWeight: FontWeight.w400,
                              ),
                            ),
                            const SizedBox(height: 10),
                            GestureDetector(
                              onTap: () =>
                                  _pickImage(ImageSource.gallery, 'aadhar'),
                              child: _aadharCardImage == null
                                  ? Icon(
                                      Icons.add_circle_outline,
                                      color: Theme.of(context)
                                          .textTheme
                                          .bodyLarge
                                          ?.color,
                                      size: 40,
                                    )
                                  : Image.file(
                                      File(_aadharCardImage!.path),
                                      height: 150.0,
                                      width: 100.0,
                                    ),
                            ),
                          ],
                        ),
                      ),
                      const Align(
                        alignment: AlignmentDirectional(0, 0.49),
                        child: Divider(
                          height: 0,
                          thickness: 2,
                          indent: 0,
                          color: Colors.black,
                          endIndent: 0,
                        ),
                      ),
                      Padding(
                        padding: EdgeInsets.fromLTRB(
                            sidePadding, topPadding - 60, sidePadding, 10),
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            const Text(
                              'Pan Card',
                              style: TextStyle(
                                fontFamily: 'Poppins',
                                fontSize: 18,
                                fontWeight: FontWeight.w400,
                              ),
                            ),
                            const SizedBox(height: 10),
                            GestureDetector(
                              onTap: () =>
                                  _pickImage(ImageSource.gallery, 'pan'),
                              child: _panCardImage == null
                                  ? Icon(
                                      Icons.add_circle_outline,
                                      color: Theme.of(context)
                                          .textTheme
                                          .bodyLarge
                                          ?.color,
                                      size: 40,
                                    )
                                  : Image.file(
                                      File(_panCardImage!.path),
                                      height: 150.0,
                                      width: 100.0,
                                    ),
                            ),
                          ],
                        ),
                      ),
                      const Align(
                        alignment: AlignmentDirectional(0, 0.49),
                        child: Divider(
                          height: 0,
                          thickness: 2,
                          indent: 0,
                          color: Colors.black,
                          endIndent: 0,
                        ),
                      ),
                      Padding(
                        padding: EdgeInsets.fromLTRB(
                            sidePadding, topPadding - 60, sidePadding, 10),
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            const Text(
                              'Driving Licence',
                              style: TextStyle(
                                fontFamily: 'Poppins',
                                fontSize: 18,
                                fontWeight: FontWeight.w400,
                              ),
                            ),
                            const SizedBox(height: 10),
                            GestureDetector(
                              onTap: () =>
                                  _pickImage(ImageSource.gallery, 'driving'),
                              child: _drivingLicenceImage == null
                                  ? Icon(
                                      Icons.add_circle_outline,
                                      color: Theme.of(context)
                                          .textTheme
                                          .bodyLarge
                                          ?.color,
                                      size: 40,
                                    )
                                  : Image.file(
                                      File(_drivingLicenceImage!.path),
                                      height: 150.0,
                                      width: 100.0,
                                    ),
                            ),
                          ],
                        ),
                      ),
                      const Align(
                        alignment: AlignmentDirectional(0, 0.49),
                        child: Divider(
                          height: 0,
                          thickness: 2,
                          indent: 50,
                          color: Colors.black,
                          endIndent: 50,
                        ),
                      ),
                      Padding(
                        padding: EdgeInsets.fromLTRB(
                            sidePadding, topPadding - 60, sidePadding, 10),
                        child: Align(
                          alignment: const AlignmentDirectional(0, 0.25),
                          child: SizedBox(
                            width: 317,
                            height: 55,
                            child: TextButton(
                              onPressed: () {
                                // Add your submit logic here
                              },
                              style: TextButton.styleFrom(
                                padding: EdgeInsets.zero,
                                shape: RoundedRectangleBorder(
                                  borderRadius: BorderRadius.circular(73),
                                ),
                              ),
                              child: Ink(
                                decoration: BoxDecoration(
                                  gradient: const LinearGradient(
                                    begin: Alignment.centerLeft,
                                    end: Alignment.centerRight,
                                    colors: [
                                      Color(0xFF2A76D0),
                                      Color(0xFF8A5EEA),
                                    ],
                                  ),
                                  borderRadius: BorderRadius.circular(1000),
                                ),
                                child: Container(
                                  alignment: Alignment.center,
                                  child: const Text(
                                    'Update',
                                    style: TextStyle(
                                      fontFamily: 'Montserrat',
                                      color: Colors.white,
                                      fontSize: 20,
                                      fontWeight: FontWeight.w500,
                                    ),
                                  ),
                                ),
                              ),
                            ),
                          ),
                        ),
                      ),
                      Padding(
                        padding: EdgeInsets.fromLTRB(
                            sidePadding, topPadding - 60, sidePadding, 10),
                        child: Align(
                          alignment: const AlignmentDirectional(0.04, 0.94),
                          child: GestureDetector(
                            onTap: () {
                              Navigator.push(
                                context,
                                MaterialPageRoute(
                                    builder: (context) => const MyHome()),
                              );
                            },
                            child: Image.asset(
                              'assets/images/home.png',
                              width: 32.0,
                              height: 32.0,
                              fit: BoxFit.cover,
                            ),
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
              ),
            ],
          ),
        ],
      ),
    );
  }
}
